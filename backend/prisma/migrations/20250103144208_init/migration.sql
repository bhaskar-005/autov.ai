-- CreateEnum
CREATE TYPE "UploadStatus" AS ENUM ('Panding', 'InProgress', 'Successful', 'Faild');

-- CreateEnum
CREATE TYPE "PlatformEnum" AS ENUM ('Youtube', 'Facebook', 'X', 'TikTok', 'Instagram');

-- CreateTable
CREATE TABLE "User" (
    "id" SERIAL NOT NULL,
    "username" TEXT NOT NULL,
    "email" TEXT NOT NULL,
    "isSuperAdmin" BOOLEAN NOT NULL DEFAULT false,
    "avatar" TEXT NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "User_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Upload" (
    "id" TEXT NOT NULL,
    "uploaderId" INTEGER NOT NULL,
    "UploadName" TEXT NOT NULL,
    "videoUrl" TEXT NOT NULL,
    "isAutoGenerated" BOOLEAN NOT NULL DEFAULT true,
    "timeStamsp" TEXT[],
    "numberOfClips" INTEGER NOT NULL,
    "uploadTime" TIMESTAMP(3)[],
    "groupId" INTEGER NOT NULL,
    "uploadStatus" "UploadStatus" NOT NULL DEFAULT 'Panding',

    CONSTRAINT "Upload_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "SocialAccountGroup" (
    "id" SERIAL NOT NULL,
    "userId" INTEGER NOT NULL,
    "groupName" TEXT NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "SocialAccountGroup_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "FacebookCredential" (
    "id" TEXT NOT NULL,
    "userId" INTEGER NOT NULL,
    "groupId" INTEGER NOT NULL,
    "accessToken" TEXT NOT NULL,
    "pageId" TEXT NOT NULL,
    "pageName" TEXT NOT NULL,

    CONSTRAINT "FacebookCredential_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "InstagramCredential" (
    "id" TEXT NOT NULL,
    "userId" INTEGER NOT NULL,
    "groupId" INTEGER NOT NULL,
    "accessToken" TEXT NOT NULL,
    "businessAccountId" TEXT NOT NULL,
    "accountName" TEXT NOT NULL,

    CONSTRAINT "InstagramCredential_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "YoutubeCredential" (
    "id" TEXT NOT NULL,
    "userId" INTEGER NOT NULL,
    "groupId" INTEGER NOT NULL,
    "channelId" TEXT NOT NULL,
    "channelName" TEXT NOT NULL,
    "accessToken" TEXT NOT NULL,
    "refreshToken" TEXT,

    CONSTRAINT "YoutubeCredential_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "XCredential" (
    "id" TEXT NOT NULL,
    "userId" INTEGER NOT NULL,
    "groupId" INTEGER NOT NULL,
    "accessToken" TEXT NOT NULL,
    "accessTokenSecret" TEXT NOT NULL,
    "accountId" TEXT NOT NULL,

    CONSTRAINT "XCredential_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TikTokCredential" (
    "id" SERIAL NOT NULL,
    "userId" INTEGER NOT NULL,
    "groupId" INTEGER NOT NULL,
    "accessToken" TEXT NOT NULL,
    "userIdTikTok" TEXT NOT NULL,
    "username" TEXT NOT NULL,
    "clientKey" TEXT,

    CONSTRAINT "TikTokCredential_pkey" PRIMARY KEY ("id")
);

-- CreateIndex
CREATE UNIQUE INDEX "User_id_key" ON "User"("id");

-- CreateIndex
CREATE UNIQUE INDEX "SocialAccountGroup_id_key" ON "SocialAccountGroup"("id");

-- AddForeignKey
ALTER TABLE "Upload" ADD CONSTRAINT "Upload_uploaderId_fkey" FOREIGN KEY ("uploaderId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Upload" ADD CONSTRAINT "Upload_groupId_fkey" FOREIGN KEY ("groupId") REFERENCES "SocialAccountGroup"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "SocialAccountGroup" ADD CONSTRAINT "SocialAccountGroup_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FacebookCredential" ADD CONSTRAINT "FacebookCredential_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "FacebookCredential" ADD CONSTRAINT "FacebookCredential_groupId_fkey" FOREIGN KEY ("groupId") REFERENCES "SocialAccountGroup"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InstagramCredential" ADD CONSTRAINT "InstagramCredential_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "InstagramCredential" ADD CONSTRAINT "InstagramCredential_groupId_fkey" FOREIGN KEY ("groupId") REFERENCES "SocialAccountGroup"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "YoutubeCredential" ADD CONSTRAINT "YoutubeCredential_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "YoutubeCredential" ADD CONSTRAINT "YoutubeCredential_groupId_fkey" FOREIGN KEY ("groupId") REFERENCES "SocialAccountGroup"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "XCredential" ADD CONSTRAINT "XCredential_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "XCredential" ADD CONSTRAINT "XCredential_groupId_fkey" FOREIGN KEY ("groupId") REFERENCES "SocialAccountGroup"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TikTokCredential" ADD CONSTRAINT "TikTokCredential_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TikTokCredential" ADD CONSTRAINT "TikTokCredential_groupId_fkey" FOREIGN KEY ("groupId") REFERENCES "SocialAccountGroup"("id") ON DELETE RESTRICT ON UPDATE CASCADE;
